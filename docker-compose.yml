version: '3.9'

services:
  client:
    image: cloudcarbonfootprint/client:latest
    ports:
      - '80:80'
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
    environment:
      - REACT_APP_PAGE_LIMIT=300000
    depends_on:
      - api
  api:
    image: docker.io/cloudcarbonfootprint/api:latest
    ports:
      - '4000:4000'
    volumes:
      - $HOME/.aws/credentials:/root/.aws/credentials
      # - $HOME/.config/gcloud/service-account-keys.json:/root/.config/gcloud/service-account-keys.json
    secrets:
      - AWS_TARGET_ACCOUNT_ROLE_NAME
      - AWS_ATHENA_DB_NAME
      - AWS_ATHENA_DB_TABLE
      - AWS_ATHENA_REGION
      - AWS_ATHENA_QUERY_RESULT_LOCATION
      - AWS_BILLING_ACCOUNT_ID
      - AWS_BILLING_ACCOUNT_NAME
      # - GCP_BIG_QUERY_TABLE
      # - GCP_BILLING_PROJECT_ID
      # - GCP_BILLING_PROJECT_NAME
      # - AZURE_CLIENT_ID
      # - AZURE_CLIENT_SECRET
      # - AZURE_TENANT_ID
      - MONGODB_URI
      # - MONGODB_CREDENTIALS
      # uncomment to define this as the certificate file for your MongoDB
      #- x509-cert-mongodb.pem
    environment:
      # set the CACHE_MODE to MONGODB to use MongoDB
      - CACHE_MODE=MONGODB
      - AWS_USE_BILLING_DATA=true
      - AWS_TARGET_ACCOUNT_ROLE_NAME=arn:aws:secretsmanager:ap-southeast-1:643546341891:secret:CCF_AWS_TARGET_ACCOUNT_ROLE_NAME-AQ5Eaz
      - AWS_ATHENA_DB_NAME=arn:aws:secretsmanager:ap-southeast-1:643546341891:secret:CCF_AWS_ATHENA_DB_NAME-MhjnRz
      - AWS_ATHENA_DB_TABLE=arn:aws:secretsmanager:ap-southeast-1:643546341891:secret:CCF_AWS_ATHENA_DB_TABLE-vBvplU
      - AWS_ATHENA_REGION=arn:aws:secretsmanager:ap-southeast-1:643546341891:secret:CCF_AWS_ATHENA_REGION-AWazNO
      - AWS_ATHENA_QUERY_RESULT_LOCATION=arn:aws:secretsmanager:ap-southeast-1:643546341891:secret:CCF_AWS_ATHENA_QUERY_RESULT_LOCATION-sa21jV
      - AWS_BILLING_ACCOUNT_ID=arn:aws:secretsmanager:ap-southeast-1:643546341891:secret:CCF_AWS_BILLING_ACCOUNT_ID-lVhpRV
      - AWS_BILLING_ACCOUNT_NAME=arn:aws:secretsmanager:ap-southeast-1:643546341891:secret:CCF_AWS_BILLING_ACCOUNT_NAME-q74R3i
      # - GCP_USE_BILLING_DATA=true
      # - GCP_USE_CARBON_FREE_ENERGY_PERCENTAGE=true
      # - GOOGLE_APPLICATION_CREDENTIALS=/root/.config/gcloud/service-account-keys.json
      # - GCP_BIG_QUERY_TABLE=/run/secrets/GOOGLE_APPLICATION_CREDENTIALS
      # - GCP_BILLING_PROJECT_ID=/run/secrets/GCP_BIG_QUERY_TABLE
      # - GCP_BILLING_PROJECT_NAME=/run/secrets/GCP_BILLING_PROJECT_ID
      # - AZURE_USE_BILLING_DATA=true
      # - AZURE_CLIENT_ID=/run/secrets/AZURE_CLIENT_ID
      # - AZURE_CLIENT_SECRET=/run/secrets/AZURE_CLIENT_SECRET
      # - AZURE_TENANT_ID=/run/secrets/AZURE_TENANT_ID
      # uncomment to enable MongoDB
      - MONGODB_URI=arn:aws:secretsmanager:ap-southeast-1:643546341891:secret:CCF_MONGODB_URI-xQOUbf
      #- MONGODB_CREDENTIALS=/run/secrets/MONGODB_CREDENTIALS
      #- x509-cert-mongodb.pem=/run/secrets/x509-cert-mongodb.pem
# secrets:
#   AWS_TARGET_ACCOUNT_ROLE_NAME:
#     file: ~/.docker/secrets/AWS_TARGET_ACCOUNT_ROLE_NAME
#   AWS_ATHENA_DB_NAME:
#     file: ~/.docker/secrets/AWS_ATHENA_DB_NAME
#   AWS_ATHENA_DB_TABLE:
#     file: ~/.docker/secrets/AWS_ATHENA_DB_TABLE
#   AWS_ATHENA_REGION:
#     file: ~/.docker/secrets/AWS_ATHENA_REGION
#   AWS_ATHENA_QUERY_RESULT_LOCATION:
#     file: ~/.docker/secrets/AWS_ATHENA_QUERY_RESULT_LOCATION
#   AWS_BILLING_ACCOUNT_ID:
#     file: ~/.docker/secrets/AWS_BILLING_ACCOUNT_ID
#   AWS_BILLING_ACCOUNT_NAME:
#     file: ~/.docker/secrets/AWS_BILLING_ACCOUNT_NAME
#   # GCP_BIG_QUERY_TABLE:
#   #   file: ~/.docker/secrets/GCP_BIG_QUERY_TABLE
#   # GCP_BILLING_PROJECT_ID:
#   #   file: ~/.docker/secrets/GCP_BILLING_PROJECT_ID
#   # GCP_BILLING_PROJECT_NAME:
#   #   file: ~/.docker/secrets/GCP_BILLING_PROJECT_NAME
#   # AZURE_CLIENT_ID:
#   #   file: ~/.docker/secrets/AZURE_CLIENT_ID
#   # AZURE_CLIENT_SECRET:
#   #   file: ~/.docker/secrets/AZURE_CLIENT_SECRET
#   # AZURE_TENANT_ID:
#   #   file: ~/.docker/secrets/AZURE_TENANT_ID
#   MONGODB_URI:
#     file: ~/.docker/secrets/MONGODB_URI
  # MONGODB_CREDENTIALS:
  #   file: ~/.docker/secrets/MONGODB_CREDENTIALS
  # uncomment to refer to your MongoDB cert file
  #x509-cert-mongodb.pem:
  #  file: ~/.docker/secrets/x509-cert-mongodb.pem
